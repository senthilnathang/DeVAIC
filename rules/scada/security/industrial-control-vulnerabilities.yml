rules:
  - id: hardcoded-plc-credentials
    message: "Hardcoded PLC/HMI credentials detected"
    severity: error
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)(password|passwd|pwd)\s*:=\s*["\'][a-zA-Z0-9!@#$%^&*()_+\-=\[\]{}|;:,.<>?]{4,}["\']'
      - pattern-regex: '(?i)(username|user)\s*:=\s*["\']admin["\']'
      - pattern-regex: '(?i)(login|auth)\s*:=\s*["\'][^"\']{4,}["\']'
    metadata:
      cwe: "CWE-798"
      owasp: "A07:2021 – Identification and Authentication Failures"
      category: "security"
      confidence: high
      subcategory:
        - "hardcoded-credentials"
      technology:
        - "plc"
        - "scada"
    fix: |
      // Use secure credential management:
      // Store credentials in secure configuration
      // Use encrypted communication protocols
      // Implement proper authentication mechanisms

  - id: unsafe-memory-access
    message: "Unsafe direct memory access in PLC code"
    severity: error
    languages:
      - SCADA
    patterns:
      - pattern-regex: 'PEEK\s*\(\s*\d+\s*\)'
      - pattern-regex: 'POKE\s*\(\s*\d+\s*,\s*.*\)'
      - pattern-regex: 'AT\s+%[MIQG][XBWD]\d+'
    metadata:
      cwe: "CWE-119"
      category: "security"
      confidence: high
      subcategory:
        - "unsafe-memory"
      technology:
        - "plc"
    fix: |
      // Use structured variable access instead of direct memory:
      // Define proper data structures
      // Use symbolic addressing
      // Validate memory boundaries

  - id: timing-vulnerability
    message: "Timing-critical operation without proper synchronization"
    severity: warning
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)TON\s*\([^)]*time\s*:=\s*T#\d+ms\)'
      - pattern-regex: '(?i)TOF\s*\([^)]*time\s*:=\s*T#\d+ms\)'
      - pattern-regex: '(?i)TP\s*\([^)]*time\s*:=\s*T#\d+ms\)'
    metadata:
      cwe: "CWE-362"
      category: "security"
      confidence: medium
      subcategory:
        - "timing-vulnerability"
      technology:
        - "plc"
        - "timing"
    fix: |
      // Use proper timing synchronization:
      // Implement safety margins in timing
      // Use hardware-based timing where critical
      // Add timeout protections

  - id: unvalidated-input-from-hmi
    message: "Unvalidated input from HMI interface"
    severity: error
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)hmi_input\s*:=\s*.*'
      - pattern-regex: '(?i)operator_input\s*:=\s*.*'
      - pattern-regex: '(?i)setpoint\s*:=\s*hmi\.'
    metadata:
      cwe: "CWE-20"
      owasp: "A03:2021 – Injection"
      category: "security"
      confidence: medium
      subcategory:
        - "input-validation"
      technology:
        - "hmi"
        - "scada"
    fix: |
      // Validate all HMI inputs:
      IF (hmi_input >= min_value) AND (hmi_input <= max_value) THEN
          setpoint := hmi_input;
      ELSE
          // Log error and use safe default
          setpoint := safe_default_value;
      END_IF;

  - id: safety-system-bypass
    message: "Safety system bypass or override detected"
    severity: error
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)safety_bypass\s*:=\s*TRUE'
      - pattern-regex: '(?i)emergency_stop.*:=\s*FALSE'
      - pattern-regex: '(?i)interlock.*bypass'
      - pattern-regex: '(?i)override.*safety'
    metadata:
      cwe: "CWE-284"
      category: "security"
      confidence: critical
      subcategory:
        - "safety-bypass"
      technology:
        - "safety"
        - "sis"
    fix: |
      // Safety systems should never be permanently bypassed:
      // Use time-limited bypasses with authorization
      // Log all bypass operations
      // Require multiple confirmations for safety overrides

  - id: weak-network-protocol
    message: "Use of insecure communication protocol"
    severity: warning
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)modbus.*tcp'
      - pattern-regex: '(?i)ethernet/ip'
      - pattern-regex: '(?i)profinet(?!.*security)'
      - pattern-regex: '(?i)dnp3(?!.*secure)'
    metadata:
      cwe: "CWE-319"
      category: "security"
      confidence: medium
      subcategory:
        - "insecure-protocol"
      technology:
        - "fieldbus"
        - "communication"
    fix: |
      // Use secure communication protocols:
      // Implement Modbus/TCP with TLS
      // Use secure versions of industrial protocols
      // Enable authentication and encryption

  - id: default-configuration
    message: "Default configuration values detected"
    severity: warning
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)password\s*:=\s*["\'](?:admin|password|123|default)["\']'
      - pattern-regex: '(?i)ip_address\s*:=\s*["\']192\.168\.1\.1["\']'
      - pattern-regex: '(?i)port\s*:=\s*502'  # Default Modbus port
    metadata:
      cwe: "CWE-1188"
      category: "security"
      confidence: medium
      subcategory:
        - "default-config"
      technology:
        - "configuration"
    fix: |
      // Change default configurations:
      // Use unique passwords for each device
      // Configure proper network addressing
      // Change default ports and protocols

  - id: insufficient-error-handling
    message: "Insufficient error handling in critical operations"
    severity: warning
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)(motor|pump|valve).*start'
      - pattern-regex: '(?i)(process|operation).*begin'
    metadata:
      cwe: "CWE-754"
      category: "security"
      confidence: low
      subcategory:
        - "error-handling"
      technology:
        - "process-control"
    fix: |
      // Implement comprehensive error handling:
      IF start_motor() THEN
          // Success path
      ELSE
          // Error handling
          alarm_active := TRUE;
          safe_shutdown();
      END_IF;

  - id: alarm-flooding-vulnerability
    message: "Potential alarm flooding vulnerability"
    severity: warning
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)alarm.*:=\s*TRUE'
      - pattern-regex: '(?i)alert.*:=\s*active'
    metadata:
      cwe: "CWE-400"
      category: "security"
      confidence: low
      subcategory:
        - "alarm-flooding"
      technology:
        - "alarm-system"
    fix: |
      // Implement alarm rate limiting:
      // Use alarm priorities and suppression
      // Implement alarm acknowledgment requirements
      // Add deadband and time delays to prevent chattering

  - id: ladder-logic-race-condition
    message: "Potential race condition in ladder logic"
    severity: warning
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)--|/|--.*--|/|--'  # Multiple contacts in series without proper interlocking
    metadata:
      cwe: "CWE-362"
      category: "security"
      confidence: low
      subcategory:
        - "race-condition"
      technology:
        - "ladder-logic"
    fix: |
      // Use proper interlocking and sequencing:
      // Implement state machines for complex sequences
      // Use one-shot instructions for critical operations
      // Add proper delays and confirmations

  - id: hardcoded-network-config
    message: "Hardcoded network configuration"
    severity: warning
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)ip\s*:=\s*["\'](?:\d{1,3}\.){3}\d{1,3}["\']'
      - pattern-regex: '(?i)gateway\s*:=\s*["\'](?:\d{1,3}\.){3}\d{1,3}["\']'
      - pattern-regex: '(?i)subnet\s*:=\s*["\'](?:\d{1,3}\.){3}\d{1,3}["\']'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: medium
      subcategory:
        - "hardcoded-config"
      technology:
        - "network"
    fix: |
      // Use configuration management:
      // Store network config in secure configuration files
      // Use DHCP where appropriate
      // Implement network configuration validation

  - id: unencrypted-data-storage
    message: "Sensitive data stored without encryption"
    severity: error
    languages:
      - SCADA
    patterns:
      - pattern-regex: '(?i)(recipe|formula|setpoint).*:=.*'
      - pattern-regex: '(?i)(calibration|parameter).*:=.*'
    metadata:
      cwe: "CWE-311"
      category: "security"
      confidence: low
      subcategory:
        - "data-encryption"
      technology:
        - "data-storage"
    fix: |
      // Encrypt sensitive operational data:
      // Use secure storage mechanisms
      // Implement access controls for sensitive parameters
      // Protect intellectual property in recipes and formulas