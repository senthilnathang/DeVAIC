rules:
  - id: hardcoded-api-key
    message: "Hardcoded API key detected in source code"
    severity: error
    languages:
      - Python
    patterns:
      - pattern-regex: '(?i)(api[_\-]?key|apikey)\s*[=:]\s*["\']([a-zA-Z0-9]{16,})["\']'
      - pattern-regex: '(?i)(secret[_\-]?key|secretkey)\s*[=:]\s*["\']([a-zA-Z0-9]{16,})["\']'
      - pattern-regex: '(?i)(access[_\-]?key|accesskey)\s*[=:]\s*["\']([a-zA-Z0-9]{16,})["\']'
    metadata:
      cwe: "CWE-798"
      owasp: "A07:2021 â€“ Identification and Authentication Failures"
      category: "security"
      confidence: high
      subcategory:
        - "hardcoded-credentials"
    fix: |
      # Use environment variables or secure configuration files:
      import os
      api_key = os.getenv('API_KEY')
      # Or use a configuration management system

  - id: hardcoded-password
    message: "Hardcoded password detected in source code"
    severity: error
    languages:
      - Python
    patterns:
      - pattern-regex: '(?i)(password|passwd|pwd)\s*[=:]\s*["\'](?!.*[\$\{\}])[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{}|;:,.<>?]{8,}["\']'
      - pattern-regex: '(?i)(pass|secret)\s*[=:]\s*["\'](?!.*[\$\{\}])[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{}|;:,.<>?]{8,}["\']'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: high
      subcategory:
        - "hardcoded-credentials"

  - id: aws-access-key
    message: "AWS Access Key ID detected in source code"
    severity: error
    languages:
      - Python
    pattern-regex: '(?i)(AKIA[0-9A-Z]{16})'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: critical
      subcategory:
        - "aws-credentials"
    fix: |
      # Use AWS IAM roles, environment variables, or AWS credentials file
      import boto3
      # AWS SDK will automatically use IAM roles or credentials file

  - id: aws-secret-key
    message: "AWS Secret Access Key detected in source code"
    severity: error
    languages:
      - Python
    pattern-regex: '(?i)([a-zA-Z0-9/+=]{40})'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: medium
      subcategory:
        - "aws-credentials"

  - id: github-token
    message: "GitHub token detected in source code"
    severity: error
    languages:
      - Python
    patterns:
      - pattern-regex: '(?i)(ghp_[a-zA-Z0-9]{36})'
      - pattern-regex: '(?i)(gho_[a-zA-Z0-9]{36})'
      - pattern-regex: '(?i)(ghu_[a-zA-Z0-9]{36})'
      - pattern-regex: '(?i)(ghs_[a-zA-Z0-9]{36})'
      - pattern-regex: '(?i)(ghr_[a-zA-Z0-9]{36})'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: critical
      subcategory:
        - "github-credentials"

  - id: jwt-token
    message: "JWT token detected in source code"
    severity: warning
    languages:
      - Python
    pattern-regex: '(?i)(eyJ[a-zA-Z0-9_\-]*\.eyJ[a-zA-Z0-9_\-]*\.[a-zA-Z0-9_\-]*)'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: medium
      subcategory:
        - "jwt-token"

  - id: private-key
    message: "Private key detected in source code"
    severity: error
    languages:
      - Python
    patterns:
      - pattern-regex: '-----BEGIN\s+(?:RSA\s+)?PRIVATE\s+KEY-----'
      - pattern-regex: '-----BEGIN\s+EC\s+PRIVATE\s+KEY-----'
      - pattern-regex: '-----BEGIN\s+DSA\s+PRIVATE\s+KEY-----'
      - pattern-regex: '-----BEGIN\s+PGP\s+PRIVATE\s+KEY\s+BLOCK-----'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: critical
      subcategory:
        - "private-key"

  - id: database-url-with-credentials
    message: "Database URL with embedded credentials detected"
    severity: error
    languages:
      - Python
    patterns:
      - pattern-regex: '(?i)(mysql|postgresql|postgres|mongodb|redis)://[a-zA-Z0-9_\-]+:[a-zA-Z0-9_\-!@#$%^&*()]+@'
      - pattern-regex: '(?i)(sqlite)://.*\.db'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: high
      subcategory:
        - "database-credentials"
    fix: |
      # Use environment variables for database connections:
      import os
      db_url = f"postgresql://{os.getenv('DB_USER')}:{os.getenv('DB_PASS')}@{os.getenv('DB_HOST')}/{os.getenv('DB_NAME')}"

  - id: slack-token
    message: "Slack token detected in source code"
    severity: error
    languages:
      - Python
    patterns:
      - pattern-regex: '(?i)(xox[baprs]-[a-zA-Z0-9\-]+)'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: critical
      subcategory:
        - "slack-token"

  - id: stripe-key
    message: "Stripe API key detected in source code"
    severity: error
    languages:
      - Python
    patterns:
      - pattern-regex: '(?i)(sk_live_[a-zA-Z0-9]{24,})'
      - pattern-regex: '(?i)(pk_live_[a-zA-Z0-9]{24,})'
      - pattern-regex: '(?i)(sk_test_[a-zA-Z0-9]{24,})'
      - pattern-regex: '(?i)(pk_test_[a-zA-Z0-9]{24,})'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: critical
      subcategory:
        - "stripe-credentials"

  - id: google-api-key
    message: "Google API key detected in source code"
    severity: error
    languages:
      - Python
    pattern-regex: '(?i)(AIza[a-zA-Z0-9\-_]{35})'
    metadata:
      cwe: "CWE-798"
      category: "security"
      confidence: critical
      subcategory:
        - "google-api-key"

  - id: microsoft-teams-webhook
    message: "Microsoft Teams webhook URL detected"
    severity: warning
    languages:
      - Python
    pattern-regex: 'https://[a-zA-Z0-9]+\.webhook\.office\.com/webhookb2/[a-zA-Z0-9\-@]+/IncomingWebhook/[a-zA-Z0-9]+/[a-zA-Z0-9\-]+'
    metadata:
      cwe: "CWE-200"
      category: "security"
      confidence: medium
      subcategory:
        - "webhook-url"